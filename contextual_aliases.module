<?php

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\contextual_aliases\ContextualPathAliasListBuilder;
use Drupal\contextual_aliases\Entity\ContextualRedirect;
use Drupal\contextual_aliases\Form\ContextualRedirectForm;
use Drupal\redirect\Plugin\Field\FieldWidget\RedirectSourceWidget;

/**
 * Implements hook_entity_type_alter().
 */
function contextual_aliases_entity_type_alter(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityType[] $entity_types */
  if (array_key_exists('redirect', $entity_types)) {
    $entity_types['redirect']->setClass(ContextualRedirect::class);
    $entity_types['redirect']->setFormClass('default', ContextualRedirectForm::class);
    $entity_types['redirect']->setFormClass('edit', ContextualRedirectForm::class);
  }
  if (isset($entity_types['path_alias'])) {
    $entity_types['path_alias']->setListBuilderClass(ContextualPathAliasListBuilder::class);
    $constraints = $entity_types['path_alias']->getConstraints();
    unset($constraints['UniquePathAlias']);
    $entity_types['path_alias']->setConstraints($constraints);
    $entity_types['path_alias']->addConstraint('ContextualUniquePathAlias', []);
  }
}

function contextual_aliases_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'entity_type_alter') {
    $group = $implementations['contextual_aliases'];
    unset($implementations['contextual_aliases']);
    $implementations['contextual_aliases'] = $group;
  }
}

/**
 * Collect all context options for displaying a select box.
 */
function contextual_aliases_context_options() {
  return \Drupal::service('path_alias.manager')->getContextOptions();
}

/**
 * Implements hook_field_widget_form_alter().
 */
function contextual_aliases_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
  if ($context['widget'] instanceof RedirectSourceWidget) {
    // Disable ajax functionality, since it doesn't know the context and
    // results in false positives.
    unset($element['path']['#ajax']);
  }
}

/**
 * Implements hook_entity_base_field_info().
 *
 * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
 */
function contextual_aliases_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() === 'path_alias') {
    $fields['context'] = BaseFieldDefinition::create('list_string')
      ->setLabel(new TranslatableMarkup('Path Alias context'))
      ->setTranslatable(TRUE)
      ->setRevisionable(TRUE)
      ->setDefaultValue('')
      ->setSetting('allowed_values_function', 'contextual_aliases_context_options')
      ->setDisplayOptions('form', [
        'type' => 'options_select',
        'weight' => 10,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE)
      ->setTranslatable(TRUE);
  }
  return $fields;
}

/**
 * Implements hook_ENTITY_TYPE_create().
 *
 * @param \Drupal\path_alias\Entity\PathAlias $pathAlias
 */
function contextual_aliases_path_alias_create($pathAlias) {
  if ($pathAlias->get('context')->isEmpty()) {
    /** @var \Drupal\contextual_aliases\ContextualAliasesManager $manager */
    $manager = \Drupal::service('path_alias.manager');
    $context = $manager->getCurrentContext();
    if ($context) {
      $pathAlias->get('context')->setValue($context);
    }
  }
}
